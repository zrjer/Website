<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SCIP,Clp,Gurobi和Cplex安装</title>
      <link href="/2020/03/02/installSolver/"/>
      <url>/2020/03/02/installSolver/</url>
      
        <content type="html"><![CDATA[<h2 id="SCIP安装"><a href="#SCIP安装" class="headerlink" title="SCIP安装"></a>SCIP安装</h2><h3 id="1-在自己的家目录下建立目录scip-并将获得的压缩包考入该文件夹并解压缩"><a href="#1-在自己的家目录下建立目录scip-并将获得的压缩包考入该文件夹并解压缩" class="headerlink" title="1.在自己的家目录下建立目录scip,并将获得的压缩包考入该文件夹并解压缩"></a>1.在自己的家目录下建立目录scip,并将获得的压缩包考入该文件夹并解压缩</h3><pre><code>tar -zxvf scipoptsuite-5.0.0.tgz</code></pre><h3 id="2-进入目录scipoptsuite-5-0-0进行编译"><a href="#2-进入目录scipoptsuite-5-0-0进行编译" class="headerlink" title="2.进入目录scipoptsuite-5.0.0进行编译"></a>2.进入目录scipoptsuite-5.0.0进行编译</h3><pre><code>cd scipoptsuite-5.0.0mkdir buildcd buildcmake ..make</code></pre><h3 id="3-进入bin目录，可能没有执行文件zimpl，进入文件夹zimpl-执行make"><a href="#3-进入bin目录，可能没有执行文件zimpl，进入文件夹zimpl-执行make" class="headerlink" title="3.进入bin目录，可能没有执行文件zimpl，进入文件夹zimpl,执行make"></a>3.进入bin目录，可能没有执行文件zimpl，进入文件夹zimpl,执行make</h3><pre><code>cd zimplmake</code></pre><h3 id="4-配置环境"><a href="#4-配置环境" class="headerlink" title="4.配置环境"></a>4.配置环境</h3><p>打开~/.bashrc目录,不要掉了</p><pre><code>vim ~/.bashrc</code></pre><p>将下面一句话考进该目录</p><pre><code>export PATH=$PATH:~/software/scip/scipoptsuite-5.0.0/build/bin/</code></pre><p>使该改变生效</p><pre><code>source ~/.bashrc</code></pre><p>可能出现的错误解决：<br>1.zlib.h：没有那个文件或目录</p><pre><code>sudo apt-get install zlib1g-dev</code></pre><p>2.gmp.h: 没有那个文件或目录</p><pre><code>sudo apt-get install libgmp3-dev</code></pre><h2 id="Clp安装"><a href="#Clp安装" class="headerlink" title="Clp安装"></a>Clp安装</h2><p>Clp的安装分为以下几步：</p><h3 id="1-在自己的家目录下建立目录clp-并进入目录clp"><a href="#1-在自己的家目录下建立目录clp-并进入目录clp" class="headerlink" title="1.在自己的家目录下建立目录clp,并进入目录clp"></a>1.在自己的家目录下建立目录clp,并进入目录clp</h3><pre><code>mkdir clpcd clp</code></pre><h3 id="2-在目录clp下进行安装"><a href="#2-在目录clp下进行安装" class="headerlink" title="2.在目录clp下进行安装"></a>2.在目录clp下进行安装</h3><pre><code>svn co https://projects.coin-or.org/svn/Clp/stable/1.16 coin-Clpcd coin-Clp./configure -Cmakemake testmake install</code></pre><h3 id="3-配置环境"><a href="#3-配置环境" class="headerlink" title="3.配置环境"></a>3.配置环境</h3><p>打开~/.bashrc目录,不要掉了”.”</p><pre><code>vim ~/.bashrc</code></pre><p>将下面一句话考进该目录</p><pre><code>export PATH=$PATH:~/clp/coin-Clp/bin</code></pre><p>使该改变生效</p><pre><code>source ~/.bashrc</code></pre><h3 id="4-测试一个例子"><a href="#4-测试一个例子" class="headerlink" title="4.测试一个例子"></a>4.测试一个例子</h3><pre><code>clp ~/clp/coin-Clp/Data/Sample/nw460.mps</code></pre><p>如果能够输出结果，说明安装成功。</p><h2 id="Gurobi安装"><a href="#Gurobi安装" class="headerlink" title="Gurobi安装"></a>Gurobi安装</h2><h3 id="1-在家目录下建立文件夹gurobi-进入该文件夹，获取安装程序并解压缩"><a href="#1-在家目录下建立文件夹gurobi-进入该文件夹，获取安装程序并解压缩" class="headerlink" title="1.在家目录下建立文件夹gurobi,进入该文件夹，获取安装程序并解压缩"></a>1.在家目录下建立文件夹gurobi,进入该文件夹，获取安装程序并解压缩</h3><pre><code>mkdir gurobicd gurobiwget https://packages.gurobi.com/7.5/gurobi7.5.2_linux64.tar.gztar -zxvf gurobi7.5.2_linux64.tar.gz</code></pre><p>8版本以上安装</p><pre><code>wget https://packages.gurobi.com/8.0/gurobi8.0.1_linux64.tar.gz</code></pre><h3 id="2-配置环境"><a href="#2-配置环境" class="headerlink" title="2.配置环境"></a>2.配置环境</h3><p>打开文件.bashrc</p><pre><code>vim ~/.bashrc</code></pre><p>将下面一句话考进该文件</p><pre><code>export PATH=$PATH:~/software/gurobi/gurobi752/linux64/bin/</code></pre><p>相应的8版本为</p><pre><code>export PATH=$PATH:~/software/gurobi/gurobi801/linux64/bin/</code></pre><p>保存文件后执行以下命令使改变生效</p><pre><code>source ~/.bashrc</code></pre><h3 id="3-申请用于学术的license用于激活，执行以下代码，注意要保证自己的IP是教育网"><a href="#3-申请用于学术的license用于激活，执行以下代码，注意要保证自己的IP是教育网" class="headerlink" title="3.申请用于学术的license用于激活，执行以下代码，注意要保证自己的IP是教育网"></a>3.申请用于学术的license用于激活，执行以下代码，注意要保证自己的IP是教育网</h3><pre><code>grbgetkey ****-****-****-****-************</code></pre><h2 id="Cplex安装"><a href="#Cplex安装" class="headerlink" title="Cplex安装"></a>Cplex安装</h2><h3 id="1-在家目录下建立文件夹cplex-并将将安装程序放入其中后，修改权限"><a href="#1-在家目录下建立文件夹cplex-并将将安装程序放入其中后，修改权限" class="headerlink" title="1.在家目录下建立文件夹cplex,并将将安装程序放入其中后，修改权限"></a>1.在家目录下建立文件夹cplex,并将将安装程序放入其中后，修改权限</h3><pre><code>mkdir cplexchmod u=rwx,g=rwx,o=rx cplex_studio12.7.1.linux-x86-64.bin</code></pre><h3 id="2-执行安装程序"><a href="#2-执行安装程序" class="headerlink" title="2.执行安装程序"></a>2.执行安装程序</h3><pre><code>./cplex_studio12.7.1.linux-x86-64.bin </code></pre><h3 id="3-选择语言为2English后，按ENTER继续，再选择1接受条款，要么按ENTER选择默认安装路径，要么自己输入要安装的绝对路径，我选择的是-home-username-cplex，之后一直按ENTER即可"><a href="#3-选择语言为2English后，按ENTER继续，再选择1接受条款，要么按ENTER选择默认安装路径，要么自己输入要安装的绝对路径，我选择的是-home-username-cplex，之后一直按ENTER即可" class="headerlink" title="3.选择语言为2English后，按ENTER继续，再选择1接受条款，要么按ENTER选择默认安装路径，要么自己输入要安装的绝对路径，我选择的是/home/username/cplex，之后一直按ENTER即可"></a>3.选择语言为2English后，按ENTER继续，再选择1接受条款，要么按ENTER选择默认安装路径，要么自己输入要安装的绝对路径，我选择的是/home/username/cplex，之后一直按ENTER即可</h3><h3 id="4-配置环境-1"><a href="#4-配置环境-1" class="headerlink" title="4.配置环境"></a>4.配置环境</h3><p>打开文件.bashrc</p><pre><code>vim ~/.bashrc</code></pre><p>将下面一句话考进该文件</p><pre><code>export PATH=$PATH:~/cplex/cplex/bin/x86-64_linux/</code></pre><p>保存文件后执行以下命令使改变生效</p><pre><code>source ~/.bashrc</code></pre><h3 id="5-测试是否安装成功"><a href="#5-测试是否安装成功" class="headerlink" title="5.测试是否安装成功"></a>5.测试是否安装成功</h3><pre><code>cplex -c read ~/cplex/cplex/examples/data/afiro.mps</code></pre><h3 id="6-如果要链接静态库文件，只需要复制下面三个文件即可"><a href="#6-如果要链接静态库文件，只需要复制下面三个文件即可" class="headerlink" title="6.如果要链接静态库文件，只需要复制下面三个文件即可"></a>6.如果要链接静态库文件，只需要复制下面三个文件即可</h3><pre><code>/cplex/cplex/lib/x86-64_linux/static_pic/libcplex.a  /cplex/cplex/lib/x86-64_linux/static_pic/libcplexdistmip.a  /cplex/cplex/lib/x86-64_linux/static_pic/libilocplex.a</code></pre><p>链接头文件，只需要以下两个</p><pre><code>/cplex/cplex/include/ilcplex/cplex.h/cplex/cplex/include/ilcplex/cpxconst.h</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Optimization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化测试集</title>
      <link href="/2020/02/27/testProb/"/>
      <url>/2020/02/27/testProb/</url>
      
        <content type="html"><![CDATA[<h3 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h3><ul><li><a href="http://www.netlib.org/lp/" target="_blank" rel="noopener">NETLIB</a></li><li><a href="http://old.sztaki.hu/~meszaros/bpmpd/" target="_blank" rel="noopener">BPMPD</a></li></ul><h3 id="线性整数规划"><a href="#线性整数规划" class="headerlink" title="线性整数规划"></a>线性整数规划</h3><ul><li><a href="http://miplib.zib.de/" target="_blank" rel="noopener">MIPLIB</a></li></ul><h3 id="二次规划"><a href="#二次规划" class="headerlink" title="二次规划"></a>二次规划</h3><ul><li><a href="http://www.doc.ic.ac.uk/~im/#DATA" target="_blank" rel="noopener">Maros Collection</a></li></ul><h3 id="线性方程组"><a href="#线性方程组" class="headerlink" title="线性方程组"></a>线性方程组</h3><ul><li><a href="https://sparse.tamu.edu/" target="_blank" rel="noopener">The SuiteSparse Matrix Collection</a></li></ul><h3 id="综合类"><a href="#综合类" class="headerlink" title="综合类"></a>综合类</h3><ul><li><a href="http://people.brunel.ac.uk/~mastjjb/jeb/info.html" target="_blank" rel="noopener">OR-Library</a></li><li><a href="https://people.sc.fsu.edu/~jburkardt/datasets/" target="_blank" rel="noopener">John Burkardt’s datasets</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Optimization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源求解器汇总</title>
      <link href="/2020/02/26/OpenSourceSolver/"/>
      <url>/2020/02/26/OpenSourceSolver/</url>
      
        <content type="html"><![CDATA[<h3 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>HiGHS</td><td><a href="https://www.maths.ed.ac.uk/hall/HiGHS/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/ERGO-Code/HiGHS">链接</a></td><td>c++</td><td>Simplex/Interior Point method</td></tr><tr><td>PCx</td><td><a href="http://pages.cs.wisc.edu/~swright/PCx/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/lpoo/PCx">链接</a></td><td>c</td><td>Interior Point method</td></tr><tr><td>Clp</td><td><a href="https://www.coin-or.org/downloading/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/coin-or/Clp">链接</a></td><td>c++</td><td></td></tr><tr><td>BPMPD</td><td><a href="http://old.sztaki.hu/~meszaros/bpmpd/" target="_blank" rel="noopener">链接</a></td><td></td><td>fortran</td><td>Interior Point method</td></tr><tr><td>HOPDM</td><td><a href="https://www.maths.ed.ac.uk/~gondzio/software/hopdm.html" target="_blank" rel="noopener">链接</a></td><td></td><td>fortran</td><td>Interior Point method</td></tr><tr><td>LIPSOL</td><td><a href="https://www.caam.rice.edu/~zhang/lipsol/" target="_blank" rel="noopener">链接</a></td><td></td><td>matlab</td><td>Interior Point method</td></tr><tr><td>Tulip</td><td></td><td><a href="https://github.com/ds4dm/Tulip.jl">链接</a></td><td>Julia</td><td>Interior Point method</td></tr></tbody></table><h3 id="线性整数规划问题"><a href="#线性整数规划问题" class="headerlink" title="线性整数规划问题"></a>线性整数规划问题</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th></tr></thead><tbody><tr><td>CBC</td><td><a href="https://www.coin-or.org/downloading/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/coin-or/Cbc">链接</a></td><td>c++</td></tr><tr><td>SCIP</td><td><a href="https://scip.zib.de/" target="_blank" rel="noopener">链接</a></td><td></td><td></td></tr><tr><td>GLPK</td><td><a href="http://www.gnu.org/software/glpk/" target="_blank" rel="noopener">链接</a></td><td></td><td>c</td></tr></tbody></table><h3 id="二次规划问题"><a href="#二次规划问题" class="headerlink" title="二次规划问题"></a>二次规划问题</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>OOQP</td><td><a href="http://pages.cs.wisc.edu/~swright/ooqp/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/emgertz/OOQP">链接</a></td><td>c</td><td>Interior Point method</td></tr><tr><td>QPALM</td><td></td><td><a href="https://github.com/Benny44/QPALM">链接</a></td><td>c</td><td>Augmented Lagrangian method</td></tr><tr><td>qpOASES</td><td></td><td><a href="https://github.com/coin-or/qpOASES">链接</a></td><td>c++</td><td></td></tr><tr><td>HPIPM</td><td></td><td><a href="https://github.com/giaf/hpipm">链接</a></td><td>c</td><td>Interior Point method</td></tr><tr><td>OSQP</td><td><a href="https://osqp.org/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/oxfordcontrol/osqp">链接</a></td><td>c</td><td>Operator Splitting  method</td></tr><tr><td>QuadProg++</td><td></td><td><a href="https://github.com/liuq/QuadProgpp">链接</a></td><td>c++</td><td>active-set dual method</td></tr><tr><td>pdco</td><td></td><td><a href="https://github.com/mxsaunders/pdco">链接</a></td><td>matlab</td><td></td></tr><tr><td>Inexact_IP-PMM</td><td></td><td><a href="https://github.com/spougkakiotis/Inexact_IP-PMM">链接</a></td><td>matlab</td><td>Interior Point method</td></tr></tbody></table><h3 id="二阶锥规划问题"><a href="#二阶锥规划问题" class="headerlink" title="二阶锥规划问题"></a>二阶锥规划问题</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>scs</td><td></td><td><a href="https://github.com/cvxgrp/scs">链接</a></td><td>c</td><td>Operator Splitting</td></tr><tr><td>ecos</td><td></td><td><a href="https://github.com/embotech/ecos">链接</a></td><td>c</td><td>Interior Point method</td></tr></tbody></table><h3 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>IPOPT</td><td><a href="https://www.coin-or.org/downloading/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/coin-or/Ipopt">链接</a></td><td>c++</td><td>Interior Point method</td></tr><tr><td>WORHP</td><td><a href="https://worhp.de/" target="_blank" rel="noopener">链接</a></td><td></td><td></td><td></td></tr><tr><td>Optizelle</td><td><a href="http://www.optimojoe.com/products/optizelle/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/OptimoJoe/Optizelle">链接</a></td><td>c++</td><td></td></tr></tbody></table><h3 id="非线性整数规划问题"><a href="#非线性整数规划问题" class="headerlink" title="非线性整数规划问题"></a>非线性整数规划问题</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>minotaur</td><td><a href="https://wiki.mcs.anl.gov/minotaur/index.php/MINOTAUR" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/minotaur-solver/minotaur">链接</a></td><td>c++</td><td></td></tr></tbody></table><h3 id="线性方程组求解"><a href="#线性方程组求解" class="headerlink" title="线性方程组求解"></a>线性方程组求解</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th><th>语言</th><th>方法</th></tr></thead><tbody><tr><td>SuitSparse</td><td><a href="http://faculty.cse.tamu.edu/davis/suitesparse.html" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/DrTimothyAldenDavis/SuiteSparse">链接</a></td><td>c</td><td>LU/Cholesky</td></tr><tr><td>SuperLU</td><td><a href="https://portal.nersc.gov/project/sparse/superlu/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/xiaoyeli/superlu_dist">链接</a></td><td>c</td><td>LU</td></tr><tr><td>Eigen</td><td><a href="http://eigen.tuxfamily.org/index.php?title=Main_Page" target="_blank" rel="noopener">链接</a></td><td></td><td></td><td>LU/Cholesky</td></tr></tbody></table><h3 id="有限元程序"><a href="#有限元程序" class="headerlink" title="有限元程序"></a>有限元程序</h3><table><thead><tr><th>name</th><th>官网</th><th>github地址</th></tr></thead><tbody><tr><td>FreeFEM</td><td><a href="https://doc.freefem.org/introduction/index.html" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/FreeFem/FreeFem-doc">链接</a></td></tr><tr><td>sparselizard</td><td><a href="http://www.sparselizard.org/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/halbux/sparselizard/">链接</a></td></tr><tr><td>hypre</td><td><a href="https://computing.llnl.gov/projects/hypre-scalable-linear-solvers-multigrid-methods" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/hypre-space/hypre">链接</a></td></tr><tr><td>libParanumal</td><td><a href="https://www.paranumal.com/" target="_blank" rel="noopener">链接</a></td><td><a href="https://github.com/paranumal/libparanumal">链接</a></td></tr></tbody></table><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Optimization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eigen使用</title>
      <link href="/2020/02/26/useEigen/"/>
      <url>/2020/02/26/useEigen/</url>
      
        <content type="html"><![CDATA[<p>Eigen的安装参见<a href="https://www.cnblogs.com/qujingtongxiao/p/9937368.html" target="_blank" rel="noopener">博客</a>.</p><h3 id="1-开始小例子"><a href="#1-开始小例子" class="headerlink" title="1.开始小例子"></a>1.开始小例子</h3><pre><code>#include &lt;iostream&gt;#include &lt;Dense&gt;using Eigen::MatrixXd;int main(){  MatrixXd m(2,2);  m(0,0) = 3;  m(1,0) = 2.5;  m(0,1) = -1;  m(1,1) = m(1,0) + m(0,1);  std::cout &lt;&lt; m &lt;&lt; std::endl;}</code></pre><p>在testeigen文件夹下面建立main.cpp文件，将以上内容考入其中，并将已经解压缩的eigen-3.3.7文件夹下面的Eigen文件夹整个的考到testeigen文件夹下面，最后进行编译：</p><pre><code>g++ -I ./Eigen  main.cpp -o main.o</code></pre><p>执行</p><pre><code>./main.o</code></pre><p>可以输出</p><pre><code>  3  -12.5 1.5</code></pre><h3 id="2-Eigen与Cmake"><a href="#2-Eigen与Cmake" class="headerlink" title="2.Eigen与Cmake"></a>2.Eigen与Cmake</h3><p>文件结构为</p><pre><code>|--testEigen|  -- src|     -- main.cpp|  -- Eigen|  -- CMakeLists.txt|  -- build</code></pre><p>其中CMakeLists.txt中内容为</p><pre><code>cmake_minimum_required (VERSION 2.6)project (TEST)set (TEST_VERSION 0.1)set(CMAKE_BUILD_TYPE &quot;Debug&quot;)set(CMAKE_CXX_FLAGS_DEBUG &quot;$ENV{CXXFLAGS} -O0 -Wall -g -ggdb -DDEBUG&quot;)set(CMAKE_CXX_FLAGS_RELEASE &quot;$ENV{CXXFLAGS} -O3 -Wall&quot;)set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/../bin)aux_source_directory(${PROJECT_SOURCE_DIR}/src DIR_SRC)include_directories(${PROJECT_SOURCE_DIR}/src)include_directories(${PROJECT_SOURCE_DIR}/Eigen)#link_directories(${PROJECT_SOURCE_DIR}/lib)add_executable(main ${DIR_SRC})</code></pre><h3 id="3-使用压缩列存储直接初始化矩阵"><a href="#3-使用压缩列存储直接初始化矩阵" class="headerlink" title="3.使用压缩列存储直接初始化矩阵"></a>3.使用压缩列存储直接初始化矩阵</h3><pre><code>#include &lt;Sparse&gt;#include &lt;vector&gt;#include &lt;iostream&gt;typedef Eigen::SparseMatrix&lt;double&gt; SpMat; // declares a column-major sparse matrix type of doubleint main(int argc, char** argv){    int rows = 5,cols = 5,nnz = 8;    double values[8] = {22,  7, 3, 5, 14,   1, 17,   8};    int InnerIndices[8] = {1,   2, 0, 2, 4, 2, 1, 4};    int OuterStarts[6] = {0, 2, 4, 5, 6, 8};    Eigen::Map&lt;SpMat&gt; sm1(rows,cols,nnz,OuterStarts,InnerIndices,values);    std::cout&lt;&lt; sm1;    return 0;}</code></pre><p>输出结果：</p><pre><code>0 3 0 0 0 22 0 0 0 17 7 5 0 1 0 0 0 0 0 0 0 0 14 0 8 </code></pre><h3 id="4-Eigen求解系数为对称矩阵的线性方程组"><a href="#4-Eigen求解系数为对称矩阵的线性方程组" class="headerlink" title="4.Eigen求解系数为对称矩阵的线性方程组"></a>4.Eigen求解系数为对称矩阵的线性方程组</h3><pre><code>#include &lt;Sparse&gt;#include &lt;vector&gt;#include &lt;iostream&gt;using namespace Eigen;using namespace std;typedef Eigen::SparseMatrix&lt;double&gt; SpMat; // declares a column-major sparse matrix type of doubleint main(int argc, char** argv){  const int N = 10,ANZ = 19;  int Ap[N+1] = {0, 1, 2, 3, 4, 6, 7, 9, 11, 15, ANZ};  int Ai[ANZ] = {0, 1, 2, 3, 1,4, 5, 4,6, 4,7, 0,4,7,8, 1,4,6,9};  double Ax[ANZ] = {1.7, 1., 1.5, 1.1, .02,2.6, 1.2,               .16,1.3, .09,1.6,.13,.52,.11,1.4, .01,.53,.56,3.1};  VectorXd b(N), x(N);  b(0) = .287;b(1) =.22;b(2)=.45;b(3)=.44;b(4)=2.486;  b(5)=.72;b(6)=1.55;b(7)=1.424;b(8)=1.621;b(9)=3.759;   Eigen::Map&lt;SpMat,RowMajor&gt; sm2(N,N,ANZ,Ap,Ai,Ax);//注意这里是压缩行存储，因为是对称矩阵，只存了上半部分  std::cout&lt;&lt; sm2;  Eigen::SimplicialLLT&lt;SpMat,Upper &gt; solver;//声明这是矩阵的上半部分  solver.analyzePattern(sm2);     solver.factorize(sm2);  if(solver.info()!=Success) {     cout&lt;&lt;&quot; decomposition failed!&quot;&lt;&lt;endl;      return -1;  }  x =  solver.solve(b);  if(solver.info()!=Success) {     cout&lt;&lt;&quot; solve failed!&quot;&lt;&lt;endl;      return -1;  }  cout&lt;&lt; x;  return 0;}</code></pre><p>这里我们使用了求解器SimplicialLLT，我们也可以使用其他的<a href="http://eigen.tuxfamily.org/dox/group__TopicSparseSystems.html" target="_blank" rel="noopener">求解器</a>,例如PastixLLT，PastixLDLT，PastixLU等，但是需要包含相应的包与头文件。输出结果如下：</p><pre><code>1.7 0 0 0 0 0 0 0 0.13 0 0 1 0 0 0.02 0 0 0 0 0.01 0 0 1.5 0 0 0 0 0 0 0 0 0 0 1.1 0 0 0 0 0 0 0 0 0 0 2.6 0 0.16 0.09 0.52 0.53 0 0 0 0 0 1.2 0 0 0 0 0 0 0 0 0 0 1.3 0 0 0.56 0 0 0 0 0 0 0 1.6 0.11 0 0 0 0 0 0 0 0 0 1.4 0 0 0 0 0 0 0 0 0 0 3.1 0.10.20.30.40.50.60.70.80.91</code></pre><p>利用压缩存储构造稀疏矩阵也可以采用如下方式:</p><pre><code>//typedef Eigen::SparseMatrix&lt;double&gt; SpMat;SpMat A;At = Map&lt;SpMat,RowMajor&gt;(n,m,nnz,Ap,Ai,Ax);</code></pre><h3 id="5-Eigen中的对角矩阵"><a href="#5-Eigen中的对角矩阵" class="headerlink" title="5.Eigen中的对角矩阵"></a>5.Eigen中的对角矩阵</h3><p>参考<a href="http://eigen.tuxfamily.org/dox/group__QuickRefPage.html" target="_blank" rel="noopener">链接</a><br>对角矩阵的使用有两种方式。第一种是声明一个对角矩阵，然后用向量来赋值，第二种是把向量看做对角矩阵<br>首先在上面文件开头加上</p><pre><code>typedef Eigen::DiagonalMatrix&lt;double,Dynamic&gt; DiagMat;</code></pre><p>结尾处加上</p><pre><code>DiagMat S(N);VectorXd c(N);for(int i=0;i&lt;N;i++)    c(i) = i+1;S.diagonal() = c;cout&lt;&lt; S*sm2&lt;&lt;endl;//方式一cout&lt;&lt; c.asDiagonal()*sm2&lt;&lt;endl;//方式二</code></pre><p>输出结果</p><pre><code>1.7 0 0 0 0 0 0 0 0.13 0 0 2 0 0 0.04 0 0 0 0 0.02 0 0 4.5 0 0 0 0 0 0 0 0 0 0 4.4 0 0 0 0 0 0 0 0 0 0 13 0 0.8 0.45 2.6 2.65 0 0 0 0 0 7.2 0 0 0 0 0 0 0 0 0 0 9.1 0 0 3.92 0 0 0 0 0 0 0 12.8 0.88 0 0 0 0 0 0 0 0 0 12.6 0 0 0 0 0 0 0 0 0 0 31 1.7 0 0 0 0 0 0 0 0.13 0 0 2 0 0 0.04 0 0 0 0 0.02 0 0 4.5 0 0 0 0 0 0 0 0 0 0 4.4 0 0 0 0 0 0 0 0 0 0 13 0 0.8 0.45 2.6 2.65 0 0 0 0 0 7.2 0 0 0 0 0 0 0 0 0 0 9.1 0 0 3.92 0 0 0 0 0 0 0 12.8 0.88 0 0 0 0 0 0 0 0 0 12.6 0 0 0 0 0 0 0 0 0 0 31 </code></pre><ul><li><a href="http://eigen.tuxfamily.org/dox/group__TopicSparseSystems.html" target="_blank" rel="noopener">参考链接</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linear System </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
